<?xml version="1.0"?>
<!-- Copyright (C) 2014 Wikimedia Foundation Licensed under the Apache License, Version 2.0 (the "License"); you may not 
  use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS 
  IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language 
  governing permissions and limitations under the License. -->
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<module name="Checker">

  <module name="SuppressWarningsFilter" />
  <module name="SuppressionFilter">
    <!-- Suppresses some checks for tests. -->
    <property name="file" value="${checkstyle.suppressions}" />
  </module>

  <module name="TreeWalker">
    <module name="SuppressWarningsHolder" />
    <!-- Javadoc: this project is not a library, so documentation on variables, non-public methods and auto-documenting fields is not needed -->
    <module name="JavadocType">
      <property name="allowMissingParamTags" value="true" /> <!-- Sometimes it's just overkill -->
      <property name="scope" value="public" /> <!-- Public Javadoc is made for public classes -->
    </module>
    <module name="JavadocMethod">
      <property name="allowUndeclaredRTE" value="true" /> <!-- You aren't supposed to declare these anyway... -->
      <property name="allowMissingReturnTag" value="true" /> <!-- Sometimes it's just overkill -->
      <property name="allowMissingParamTags" value="true" /> <!-- Sometimes it's just overkill -->
      <property name="tokens" value="METHOD_DEF" /> <!-- Constructors don't always need Javadoc -->
      <property name="scope" value="public" /> <!-- Public Javadoc is made for public methods -->
    </module>
    <module name="JavadocStyle" />


    <!-- Formatting -->
    <module name="Indentation">
      <property name="basicOffset" value="4" />
      <property name="caseIndent" value="0" />
    </module>
    <module name="LineLength">
      <property name="max" value="160" />
    </module>
    <module name="MethodParamPad" />
    <module name="NoWhitespaceAfter" />
    <module name="NoWhitespaceBefore" />
    <module name="ParenPad" />
    <module name="TypecastParenPad">
      <property name="option" value="nospace" />
    </module>
    <module name="WhitespaceAfter">
      <property name="tokens" value="COMMA, SEMI" /> <!-- not typecasts -->
    </module>
    <module name="WhitespaceAround">
      <property name="allowEmptyConstructors" value="true" />
      <property name="allowEmptyMethods" value="true" />
      <property name="allowEmptyTypes" value="true" />
      <property name="allowEmptyLoops" value="true" />
    </module>
    <module name="ModifierOrder" />
    <module name="RedundantModifier" />
    <module name="EmptyBlock">
      <!-- Put a comment in it if you need one explaining why -->
      <property name="option" value="text" />
    </module>
    <module name="LeftCurly">
      <property name="maxLineLength" value="120" />
    </module>
    <module name="RightCurly" />
    <module name="AvoidNestedBlocks">
      <property name="allowInSwitchCase" value="true" />
    </module>
    <module name="EmptyStatement" />
    <module name="UpperEll" /> <!-- Lowercase l is hard to read -->
    <module name="ArrayTypeStyle" />


    <!-- Naming conventions -->
    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
    </module>
    <module name="TypeName" />
    <module name="ConstantName">
      <!-- Allow "log". There might be other non-constant static finals but they should be rare enough we can just list them 
        here when they come up. -->
      <property name="format" value="^([A-Z][A-Z0-9]*(_[A-Z0-9]+)*|log)$" />
    </module>
    <module name="MemberName" />
    <module name="LocalFinalVariableName" />
    <module name="LocalVariableName" />
    <module name="ParameterName" />
    <module name="StaticVariableName" />
    <module name="UnnecessaryParentheses" />
    <module name="PackageDeclaration" />


    <!-- Import: order is java, javax, org, com -->
    <module name="AvoidStarImport" />
    <module name="IllegalImport" />
    <module name="RedundantImport" />
    <module name="UnusedImports" />
    <module name="ImportOrder">
      <property name="option" value="top"/>
      <property name="groups" value="/^java\./,javax,org,com,"/>
      <property name="ordered" value="false"/>
      <property name="caseSensitive" value="false"/>
      <property name="separated" value="true"/>
      <property name="sortStaticImportsAlphabetically" value="true"/>
    </module>


    <!-- Common coding problems/opinionated stuff -->
    <module name="CovariantEquals" />
    <module name="EqualsHashCode" />
    <module name="InnerAssignment" /> <!-- Too suprising -->
    <module name="ModifiedControlVariable" />
    <module name="SimplifyBooleanExpression" />
    <module name="SimplifyBooleanReturn" />
    <module name="StringLiteralEquality" />
    <module name="SuperClone" />
    <module name="SuperFinalize" />
    <module name="IllegalCatch" />
    <module name="IllegalThrows" />
    <module name="ExplicitInitialization" /> <!-- May as well let Java do what it's going to do -->
    <module name="DefaultComesLast" />
    <module name="FallThrough" />
    <module name="MultipleVariableDeclarations" />
    <module name="VisibilityModifier" /> <!-- May as well follow standard Java style here -->
    <module name="FinalClass" />
    <module name="HideUtilityClassConstructor" />
    <module name="MutableException" />
    <module name="UncommentedMain">
      <property name="excludedClasses" value="org\.wikidata\.query\.rdf\.tool\..*" />
    </module>


    <!-- Really opinionated. Probably wrong. Do not raise errors on the following modules -->
    <module name="ClassFanOutComplexity">
      <property name="id" value="checkstyle:classfanoutcomplexity"/>
      <property name="max" value="25"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="CyclomaticComplexity">
      <property name="severity" value="warning"/>
    </module>
    <module name="NPathComplexity">
      <property name="severity" value="warning"/>
    </module>


  </module>

  <!-- More formatting stuff that can't be in TreeWalker -->
  <module name="NewlineAtEndOfFile" />
  <module name="RegexpSingleline">
    <property name="format" value="\s+$" />
    <property name="message" value="Line has trailing spaces." />
  </module>
</module>
